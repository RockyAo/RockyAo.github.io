{"title":"设计模式学习-原型模式","slug":"设计模式-原型模式","url":"http://share.ra.com/设计模式-原型模式","date":"2017-12-19T14:30:37.000Z","updated":"2017-12-20T14:41:03.305Z","comments":true,"excerpt":"","tags":["Swift","DesignPattern"],"content":"<h2 id=\"原型模式相关概念\"><a href=\"#原型模式相关概念\" class=\"headerlink\" title=\"原型模式相关概念\"></a>原型模式相关概念</h2><p>原型模式通过克隆已有的对象来创建新的对象，已有的对象即为原型.</p>\n<blockquote>\n<p>使用这个模式的好处</p>\n</blockquote>\n<ul>\n<li>隐藏了创建对象的代码，即代码对于使用它的组件是不可见的</li>\n<li>避免重复初始化过程。</li>\n<li>避免对类模板的依赖</li>\n</ul>\n<blockquote>\n<p>什么时候使用</p>\n</blockquote>\n<p>当需要创建新的实例，但又不想依赖类的构造方法。可以使用这个模式</p>\n<blockquote>\n<p>坑</p>\n</blockquote>\n<ul>\n<li>深拷贝和浅拷贝</li>\n<li>代码结构混乱(必须暴露原型对象，用于拷贝)</li>\n</ul>\n<p>原型模式例子：</p>\n<p>将一个值类型赋值给变量的时候，Swift会自动使用原型模式。 值类型是使用结构体定义的。</p>\n<p>我们定义一个结构体  Appointment。其结构如下面代码</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> UIKit</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">///结构体为值类型，默认会就行深拷贝</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Appointment</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> name:<span class=\"type\">String</span></div><div class=\"line\">    <span class=\"keyword\">var</span> day:<span class=\"type\">String</span></div><div class=\"line\">    <span class=\"keyword\">var</span> place:<span class=\"type\">String</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">printDetail</span><span class=\"params\">(label:String)</span></span> &#123;</div><div class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">\"<span class=\"subst\">\\(label)</span> with <span class=\"subst\">\\(name)</span> on <span class=\"subst\">\\(day)</span> at <span class=\"subst\">\\(place)</span>\"</span>)</div><div class=\"line\">    &#125;</div><div class=\"line\">    </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>实例化一个 beerMeeting。然后把beermetting 赋值给workmeeting。并修改一些值。</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span>  beerMeeting = <span class=\"type\">Appointment</span>(name: <span class=\"string\">\"Bob\"</span>, day: <span class=\"string\">\"Mon\"</span>, place: <span class=\"string\">\"BeiJing\"</span>)</div><div class=\"line\">beerMeeting.printDetail(label: <span class=\"string\">\"beerMeeting\"</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> workMeeting = beerMeeting</div><div class=\"line\">workMeeting.name = <span class=\"string\">\"Alice\"</span></div><div class=\"line\">workMeeting.day = <span class=\"string\">\"Fri\"</span></div><div class=\"line\"><span class=\"comment\">//workMeeting.place = \"Shanghai\"</span></div><div class=\"line\"></div><div class=\"line\">workMeeting.printDetail(label: <span class=\"string\">\"workmeeting\"</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">let</span> beerPointer = <span class=\"built_in\">withUnsafePointer</span>(to: &amp;beerMeeting, &#123; $<span class=\"number\">0</span> &#125;)</div><div class=\"line\"><span class=\"keyword\">let</span> workPointer = <span class=\"built_in\">withUnsafePointer</span>(to: &amp;workMeeting, &#123; $<span class=\"number\">0</span> &#125;)</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">print</span>(beerPointer)</div><div class=\"line\"><span class=\"built_in\">print</span>(workPointer)</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">print</span>(beerMeeting)</div><div class=\"line\"><span class=\"built_in\">print</span>(workMeeting)</div></pre></td></tr></table></figure>\n<p>下面是打印的结果，可以看到Swift自动对 beerMetting进行了一次深拷贝。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">beerMeeting with Bob on Mon at BeiJing</div><div class=\"line\">workmeeting with Alice on Fri at BeiJing</div><div class=\"line\">0x00000001142bc920</div><div class=\"line\">0x00000001142bc968</div><div class=\"line\">Appointment(name: &quot;Bob&quot;, day: &quot;Mon&quot;, place: &quot;BeiJing&quot;)</div><div class=\"line\">Appointment(name: &quot;Alice&quot;, day: &quot;Fri&quot;, place: &quot;BeiJing&quot;)</div></pre></td></tr></table></figure>\n<p>如果要在引用类型中实现原型模式，需要实现NSCoping协议。</p>\n<p>本文中使用的SportStore应用的初始模板在这里 <a href=\"https://github.com/RockyAo/DesignPatternerLearn\" target=\"_blank\" rel=\"external\">https://github.com/RockyAo/DesignPatternerLearn</a></p>\n<p>本文中示例代码也在这里(02文件夹下)<br><a href=\"https://github.com/RockyAo/DesignPatternerLearn\" target=\"_blank\" rel=\"external\">https://github.com/RockyAo/DesignPatternerLearn</a></p>\n","prev":{"title":"设计模式学习-单例模式","slug":"设计模式-单例模式"},"next":{"title":"设计模式学习-设计原则","slug":"设计模式-设计原则"}}