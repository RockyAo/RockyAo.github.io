{"title":"RxSwift (二) Working with Subjects","slug":"RxSwift (二) Working with Subjects","url":"http://share.ra.com/RxSwift (二) Working with Subjects","date":"2017-03-22T06:09:33.000Z","updated":"2017-03-22T06:35:00.000Z","comments":true,"excerpt":"","tags":["Swift","RxSwift"],"content":"<p>首先在playground 中给ObervableType增加一个扩展。方便查看子类订阅时发生的变化</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">extension</span> <span class=\"title\">ObservableType</span></span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">///给每一个观察者增加一个id。并打印id和发射的事件</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">addObservable</span><span class=\"params\">(<span class=\"number\">_</span> id:String)</span></span> -&gt; <span class=\"type\">Disposable</span> &#123;</div><div class=\"line\">        </div><div class=\"line\">        <span class=\"keyword\">return</span> subscribe&#123;</div><div class=\"line\">        </div><div class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">\"Subscription:\"</span>, id, <span class=\"string\">\"Event:\"</span>, $<span class=\"number\">0</span>)</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">writeSequenceToConsole</span>&lt;O: ObservableType&gt;<span class=\"params\">(name: String, sequence: O)</span></span> -&gt; <span class=\"type\">Disposable</span> &#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> sequence.subscribe &#123; event <span class=\"keyword\">in</span></div><div class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">\"Subscription: <span class=\"subst\">\\(name)</span>, event: <span class=\"subst\">\\(event)</span>\"</span>)</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"PublishSubject\"><a href=\"#PublishSubject\" class=\"headerlink\" title=\"PublishSubject\"></a>PublishSubject</h2><p>PublishSubject只会把在订阅发生的时间点之后来自原始Observable的数据发射给观察者。</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\">exampleOf(description: <span class=\"string\">\"PublishSubject\"</span>) &#123; </div><div class=\"line\">    </div><div class=\"line\">    <span class=\"keyword\">let</span> disposeBag = <span class=\"type\">DisposeBag</span>()</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"keyword\">let</span> publishSubject = <span class=\"type\">PublishSubject</span>&lt;<span class=\"type\">String</span>&gt;()</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"comment\">///第一组</span></div><div class=\"line\">    publishSubject.addObservable(<span class=\"string\">\"no.1\"</span>).disposed(by: disposeBag)</div><div class=\"line\">    </div><div class=\"line\">    publishSubject.onNext(<span class=\"string\">\"2\"</span>)</div><div class=\"line\">    </div><div class=\"line\">    publishSubject.onNext(<span class=\"string\">\"3\"</span>)</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"comment\">//第二组</span></div><div class=\"line\">    publishSubject.addObservable(<span class=\"string\">\"no.2\"</span>).disposed(by: disposeBag)</div><div class=\"line\">    </div><div class=\"line\">    publishSubject.onNext(<span class=\"string\">\"🐱\"</span>)</div><div class=\"line\">    </div><div class=\"line\">    publishSubject.onNext(<span class=\"string\">\"🐶\"</span>)</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>打印结果如下</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">------exampleOf:<span class=\"type\">PublishSubject</span>------</div><div class=\"line\"><span class=\"type\">Subscription</span>: no.<span class=\"number\">1</span> <span class=\"type\">Event</span>: next(<span class=\"number\">2</span>)</div><div class=\"line\"><span class=\"type\">Subscription</span>: no.<span class=\"number\">1</span> <span class=\"type\">Event</span>: next(<span class=\"number\">3</span>)</div><div class=\"line\"><span class=\"type\">Subscription</span>: no.<span class=\"number\">1</span> <span class=\"type\">Event</span>: next(🐱)</div><div class=\"line\"><span class=\"type\">Subscription</span>: no.<span class=\"number\">2</span> <span class=\"type\">Event</span>: next(🐱)</div><div class=\"line\"><span class=\"type\">Subscription</span>: no.<span class=\"number\">1</span> <span class=\"type\">Event</span>: next(🐶)</div><div class=\"line\"><span class=\"type\">Subscription</span>: no.<span class=\"number\">2</span> <span class=\"type\">Event</span>: next(🐶)</div></pre></td></tr></table></figure>\n<p>可以看no.2 并没有收到no.2订阅之前发送的信号（2和3）。</p>\n<h2 id=\"ReplaySubject\"><a href=\"#ReplaySubject\" class=\"headerlink\" title=\"ReplaySubject\"></a>ReplaySubject</h2><p>ReplaySubject会发射所有来自原始Observable的数据给观察者，无论它们是何时订阅的。也 有其它版本的ReplaySubject，在重放缓存增长到一定大小的时候或过了一段时间后会丢弃旧 的数据(原始Observable发射的)。</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\">exampleOf(description: <span class=\"string\">\"replaySubject\"</span>) &#123; </div><div class=\"line\">    </div><div class=\"line\">    <span class=\"keyword\">let</span> disposeBag = <span class=\"type\">DisposeBag</span>()</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"keyword\">let</span> replaySubject = <span class=\"type\">ReplaySubject</span>&lt;<span class=\"type\">String</span>&gt;.create(bufferSize: <span class=\"number\">2</span>)</div><div class=\"line\">    </div><div class=\"line\">    replaySubject.addObservable(<span class=\"string\">\"no.1\"</span>).disposed(by: disposeBag)</div><div class=\"line\">    </div><div class=\"line\">    replaySubject.onNext(<span class=\"string\">\"第一个事件\"</span>)</div><div class=\"line\">    </div><div class=\"line\">    replaySubject.onNext(<span class=\"string\">\"第二个事件\"</span>)</div><div class=\"line\"></div><div class=\"line\">    </div><div class=\"line\">    </div><div class=\"line\">    replaySubject.addObservable(<span class=\"string\">\"no.2\"</span>).disposed(by: disposeBag)</div><div class=\"line\">    </div><div class=\"line\">    replaySubject.onNext(<span class=\"string\">\"3\"</span>)</div><div class=\"line\">    </div><div class=\"line\">    replaySubject.onNext(<span class=\"string\">\"4\"</span>)</div><div class=\"line\">    </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>打印结果如下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">------exampleOf:replaySubject------</div><div class=\"line\">Subscription: no.1 Event: next(第一个事件)</div><div class=\"line\">Subscription: no.1 Event: next(第二个事件)</div><div class=\"line\">Subscription: no.2 Event: next(第一个事件)</div><div class=\"line\">Subscription: no.2 Event: next(第二个事件)</div><div class=\"line\">Subscription: no.1 Event: next(3)</div><div class=\"line\">Subscription: no.2 Event: next(3)</div><div class=\"line\">Subscription: no.1 Event: next(4)</div><div class=\"line\">Subscription: no.2 Event: next(4)</div></pre></td></tr></table></figure>\n<p>会将订阅之前的信号发给新订阅者。如果指定了buttersize,会根据buttersize（我理解为多少个）发送之前的数据</p>\n<h2 id=\"BehaviorSubject\"><a href=\"#BehaviorSubject\" class=\"headerlink\" title=\"BehaviorSubject\"></a>BehaviorSubject</h2><p>当观察者订阅BehaviorSubject时，它开始发射原始Observable最近发射的数据(如果此时还 没有收到任何数据，它会发射一个默认值)，然后继续发射其它任何来自原始Observable的 数据。</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">exampleOf(description: <span class=\"string\">\"BehaviorSubject\"</span>) &#123; </div><div class=\"line\">    </div><div class=\"line\">    <span class=\"keyword\">let</span> disposeBag = <span class=\"type\">DisposeBag</span>()</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"keyword\">let</span> subject = <span class=\"type\">BehaviorSubject</span>(value: <span class=\"string\">\"behavior\"</span>)</div><div class=\"line\">    </div><div class=\"line\">    subject.addObservable(<span class=\"string\">\"第一个响应\"</span>).disposed(by: disposeBag)</div><div class=\"line\">    </div><div class=\"line\">    subject.onNext(<span class=\"string\">\"第一个事件\"</span>)</div><div class=\"line\">    </div><div class=\"line\">    subject.onNext(<span class=\"string\">\"第二个事件\"</span>)</div><div class=\"line\">    </div><div class=\"line\">    subject.addObservable(<span class=\"string\">\"第二个响应\"</span>).disposed(by: disposeBag)</div><div class=\"line\">    </div><div class=\"line\">    subject.onNext(<span class=\"string\">\"第三个事件\"</span>)</div><div class=\"line\">    </div><div class=\"line\">    subject.onNext(<span class=\"string\">\"第四个事件\"</span>)</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>打印结果</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">------exampleOf:BehaviorSubject------</div><div class=\"line\">Subscription: 第一个响应 Event: next(behavior)</div><div class=\"line\">Subscription: 第一个响应 Event: next(第一个事件)</div><div class=\"line\">Subscription: 第一个响应 Event: next(第二个事件)</div><div class=\"line\">Subscription: 第二个响应 Event: next(第二个事件)</div><div class=\"line\">Subscription: 第一个响应 Event: next(第三个事件)</div><div class=\"line\">Subscription: 第二个响应 Event: next(第三个事件)</div><div class=\"line\">Subscription: 第一个响应 Event: next(第四个事件)</div><div class=\"line\">Subscription: 第二个响应 Event: next(第四个事件)</div></pre></td></tr></table></figure>\n<h2 id=\"Variable\"><a href=\"#Variable\" class=\"headerlink\" title=\"Variable\"></a>Variable</h2><p>Variable是BehaviorSubject的一层封装。特点不会被显式终结。即：不会收到 .Completed 和 .Error 这类的终结事件，它会主动在析构的时候发送 .Complete 。</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">exampleOf(description: <span class=\"string\">\"Variable\"</span>) &#123; </div><div class=\"line\">    </div><div class=\"line\">    <span class=\"keyword\">let</span> disposeBag = <span class=\"type\">DisposeBag</span>()</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"keyword\">let</span> variable = <span class=\"type\">Variable</span>&lt;<span class=\"type\">String</span>&gt;(<span class=\"string\">\"默认值\"</span>)</div><div class=\"line\">    </div><div class=\"line\">    variable.asObservable().addObservable(<span class=\"string\">\"no.1\"</span>).disposed(by: disposeBag)</div><div class=\"line\">    </div><div class=\"line\">    variable.value = <span class=\"string\">\"第二个值\"</span></div><div class=\"line\">    </div><div class=\"line\">    variable.value = <span class=\"string\">\"第三个值\"</span></div><div class=\"line\">    </div><div class=\"line\">    variable.asObservable().addObservable(<span class=\"string\">\"no.2\"</span>).disposed(by: disposeBag)</div><div class=\"line\">    </div><div class=\"line\">    variable.value = <span class=\"string\">\"第四个值\"</span></div><div class=\"line\">    </div><div class=\"line\">    variable.value = <span class=\"string\">\"第五个值\"</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>打印结果</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">------exampleOf:Variable------</div><div class=\"line\">Subscription: no.1 Event: next(默认值)</div><div class=\"line\">Subscription: no.1 Event: next(第二个值)</div><div class=\"line\">Subscription: no.1 Event: next(第三个值)</div><div class=\"line\">Subscription: no.2 Event: next(第三个值)</div><div class=\"line\">Subscription: no.1 Event: next(第四个值)</div><div class=\"line\">Subscription: no.2 Event: next(第四个值)</div><div class=\"line\">Subscription: no.1 Event: next(第五个值)</div><div class=\"line\">Subscription: no.2 Event: next(第五个值)</div><div class=\"line\">Subscription: no.1 Event: completed</div><div class=\"line\">Subscription: no.2 Event: completed</div></pre></td></tr></table></figure>\n<ul>\n<li>Demo地址<a href=\"https://github.com/RockyAo/RxSwift_learn\" target=\"_blank\" rel=\"external\">https://github.com/RockyAo/RxSwift_learn</a>.或者直接看官方的demo</li>\n</ul>\n","prev":{"title":"设计模式学习-设计原则","slug":"设计模式-设计原则"},"next":{"title":"RxSwift（一）Creating and Subscribing to Observables 创建和订阅观察者","slug":"RxSwift（一）Creating and Subscribing to Observables 创建和订阅观察者"}}